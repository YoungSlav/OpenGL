#version 430

layout(local_size_x = 1024) in;

struct Particle
{
    vec3 Position;
    vec3 PredictedPosition;
    vec3 Velocity;
    float Density;
};
layout(std430, binding = 0) buffer ParticlesBuffer
{
	Particle Particles[];
};

uniform float SimulationTimeStep;

uniform float GravityForce;



void main()
{
    uint i = gl_GlobalInvocationID.x;
    if ( i >= Particles.length() ) return;

    Particles[i].Velocity += vec3(0.0, -GravityForce, 0.0) * SimulationTimeStep;
    Particles[i].PredictedPosition = Particles[i].Position + Particles[i].Velocity * SimulationTimeStep;
};