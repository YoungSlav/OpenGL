#version 430

layout(local_size_x = 256) in;

struct SortedParticle
{
    uint CellHash;
    uint CellIndex;
    uint pIndex;
};
layout(std430, binding = 1) buffer SortedParticlesBuffer
{
	SortedParticle SortedParticles[];
};

layout(std430, binding = 2) buffer StartIndicesBuffer
{
	uint StartIndices[];
};

uniform uint ParticleCount;

void main()
{
    uint i = gl_GlobalInvocationID.x;
    if ( i >= ParticleCount ) return;

    uint cellIndex = SortedParticles[i].CellIndex;
    uint prevCellIndex = i != 0 ? SortedParticles[i-1].CellIndex : -1;
    if ( cellIndex != prevCellIndex )
    {
        StartIndices[cellIndex] = i;
    }
};